<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>pixies @ website</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-07-14T10:44:00-03:00</updated><entry><title>Como utilizar acentuação em teclado americano do Macbook pro no ArchLinux</title><link href="/como-utilizar-acentuacao-em-teclado-americano-do-macbook-pro-no-archlinux.html" rel="alternate"></link><published>2019-07-14T10:44:00-03:00</published><updated>2019-07-14T10:44:00-03:00</updated><author><name>pixies</name></author><id>tag:None,2019-07-14:/como-utilizar-acentuacao-em-teclado-americano-do-macbook-pro-no-archlinux.html</id><summary type="html">&lt;h1&gt;Macbook pro com ArchLinux - Ops... onde foram parar os acentos?&lt;/h1&gt;
&lt;p&gt;Após instalar GNU/Linux (ArchLinux) em meu Macbook Pro passei uma semana escrevendo sem utilizar acentução nas palavras, e sempre que partia para configurar um teclado compatível ele não funcionava corretamente, então cheguei nesta referência &lt;a href="https://www.macminds.com.br/?p=29" target="_blank" title="Acentuação: os desafios de pontuar no Mac"&gt;"Acentuação: os desafios de pontuar …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Macbook pro com ArchLinux - Ops... onde foram parar os acentos?&lt;/h1&gt;
&lt;p&gt;Após instalar GNU/Linux (ArchLinux) em meu Macbook Pro passei uma semana escrevendo sem utilizar acentução nas palavras, e sempre que partia para configurar um teclado compatível ele não funcionava corretamente, então cheguei nesta referência &lt;a href="https://www.macminds.com.br/?p=29" target="_blank" title="Acentuação: os desafios de pontuar no Mac"&gt;"Acentuação: os desafios de pontuar no Mac"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Contudo não é nada de outro mundo, basta memorizar a sequência de teclas abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Acento Agudo (´): Option + E&lt;/li&gt;
&lt;li&gt;C Com Cedilha (Ç): Option + C&lt;/li&gt;
&lt;li&gt;Til (~): Option + N&lt;/li&gt;
&lt;li&gt;Acento Circunflexo (^): Option + I&lt;/li&gt;
&lt;li&gt;Crase (`): Option + Tecla `&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;
--~ Esta postagem será reatualizada algumas vezes até está concluída, esta é a sua primeira versão.
&lt;/code&gt;&lt;/p&gt;</content><category term="blog"></category><category term="gnu linux"></category><category term="archlinux"></category><category term="config"></category><category term="macbook pro"></category><category term="acentuação"></category></entry><entry><title>Um site pessoal com Pelican</title><link href="/um-site-pessoal-com-pelican.html" rel="alternate"></link><published>2019-07-13T19:22:00-03:00</published><updated>2019-07-13T19:22:00-03:00</updated><author><name>pixies</name></author><id>tag:None,2019-07-13:/um-site-pessoal-com-pelican.html</id><summary type="html">&lt;p&gt;Já tem algum tempo que eu venho tentando voltar a escrever minhas loucuras. Não queria também neste momento gastar uma grana com VSP, Servidor, ou algo do tipo. Então alguns problemas simples surgiram como qual serviço de hospedagem e qual tecnologia usar. Então vamos por partes:&lt;/p&gt;
&lt;h2&gt;Primeiro&lt;/h2&gt;
&lt;p&gt;Descidi usar o …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Já tem algum tempo que eu venho tentando voltar a escrever minhas loucuras. Não queria também neste momento gastar uma grana com VSP, Servidor, ou algo do tipo. Então alguns problemas simples surgiram como qual serviço de hospedagem e qual tecnologia usar. Então vamos por partes:&lt;/p&gt;
&lt;h2&gt;Primeiro&lt;/h2&gt;
&lt;p&gt;Descidi usar o serviço de páginas estáticas do github, o &lt;a href="http://github.io" target="_blank"&gt;githubpages&lt;/a&gt;. Desta forma eu tenho um serviço estável e consolidado para servir minhas páginas.&lt;/p&gt;
&lt;h2&gt;Segundo&lt;/h2&gt;
&lt;p&gt;Não estava muito afim de criar meus HTMLs na unha sempre que tivesse afim de escrever um conteúdo qualquer, de forma que precisava de um gerador de páginas HTMLs. A alguns anos atras conheci o &lt;a href="https://jekillrb.com" target="_blank" title="Jekill - Transform your plain text into static website and blogs"&gt;Jekill&lt;/a&gt; uma ferramenta bacana para gerar HTMLs porém não estava muito confortável em ter que usar &lt;a href="http://ruby-lang.org/pt/" target="_blank" title="Ruby Lang"&gt;Ruby&lt;/a&gt;, nada contra, apenas não queria usar, então descidi usar o &lt;a href="http://getpelican.com" target="_blank" title="Pelican WebSite"&gt;Pelican&lt;/a&gt; que basicamente resolve o mesmo problema, mas escrito em &lt;a href="http://python.org" target="_blank" title="Python WebSite"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Fazendo funcionar&lt;/h2&gt;
&lt;p&gt;O &lt;a href="http://github.com" target="_blank"&gt;GitHub&lt;/a&gt; oferece um serviço de páginas estáticas chamado &lt;a href="http://github.io" target="_blank"&gt;GithubPages&lt;/a&gt; que para utilizar é necessário apenas criar um repositório com o seguinte padrão: username.github.io onde "username" deve ser substituído pelo nome do seu usuário no github.&lt;/p&gt;
&lt;h3&gt;Passo a Passo&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Se não tiver, crie uma conta no &lt;a href="http://github.com" target="_blank"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Crie um repositório username.github.io - o meu - pixies.github.io&lt;/li&gt;
&lt;li&gt;Suba seus arquivos neste repositório e acesse o endereço https://username.github.io&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;E o Pelican?&lt;/h2&gt;
&lt;p&gt;Vou entender que você jǻ conhece algumas coisas sobre python, como utilizar ambiente virtual e o utilizar o pip. &lt;/p&gt;
&lt;p&gt;Criando ambiente virtual&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ virtualenv -p python3 venv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Acessando ambiente&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ source venv/bin/activate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instalando Pelican via pip&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(venv)$ pip install pelican&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Criando seu primeiro WebSite&lt;/h2&gt;
&lt;p&gt;Se você criou um repositório e ele ainda está vazio, simplesmente clone-o e vá para a pasta do seu projeto. Siga até shellunix (percebeu agora que eu acredito que você não usa uinous!?) de preferência e rode o seguinte comando, responda as perguntas necessárias e sinta-se a vontade para confirmar as opções default que estão entre parenteses.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(env)$ pelican-quickstart
(env)$ tree&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt; 
 ├── content&lt;/p&gt;
&lt;p&gt;├── Makefile&lt;/p&gt;
&lt;p&gt;├── output&lt;/p&gt;
&lt;p&gt;├── pelicanconf.py&lt;/p&gt;
&lt;p&gt;├── publishconf.py&lt;/p&gt;
&lt;p&gt;├── tasks.py
&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Estrutura de arquivos e diretótios&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;O diretótio "content" ficará todos fontes de todo o conteúdo produzido;&lt;/li&gt;
&lt;li&gt;Makefile contem instruções para automatizar processos;&lt;/li&gt;
&lt;li&gt;No diretório "output" ficará todos os arquivos staticos gerados a partir do conteúdo que está no diretório "content";
...&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Criando seu primeiro conteúdo&lt;/h3&gt;
&lt;p&gt;Siga até o diretório "content" e crie um diretório chamado de "pages" onde todas os arquivos destinados as páginas serão criados, agora dentro do diretório "pages" crie um arquivo com a extenção .rst, "contanto.rst" e escreva o seguinte conteúdo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Title: Página de Contúdo&lt;/p&gt;
&lt;p&gt;Date: 2019-07-14 10:20&lt;/p&gt;
&lt;p&gt;Category: Pages&lt;/p&gt;
&lt;p&gt;Está é a página de Contatos&lt;/p&gt;
&lt;p&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Observe que diretório "output" ainda está vazio, agora rode o comando "pelican" pela primeira vez:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(env)$ pelican&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;| BaseReader (static)&lt;/p&gt;
&lt;p&gt;| HTMLReader (htm, html)&lt;/p&gt;
&lt;p&gt;| RstReader (rst)&lt;/p&gt;
&lt;p&gt;Done: Processed 0 articles, 0 drafts, 1 pages, 0 hidden pages and 0 draft pages in 0.07 seconds.&lt;/p&gt;
&lt;p&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Abrindo meu website&lt;/h3&gt;
&lt;p&gt;Você pode simplemente abrir seu navegador de internet preferido e navegar até o diretório output do seu projeto e abrir o arquivo index.html, ou pode na sua shellunix entrar no diretório output e rodar o seguinte comando:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(env)$ cd  output&lt;/p&gt;
&lt;p&gt;(env)$ python3 -m http.server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Agora em seu navegador preferido acesse http://localhost:8000&lt;/p&gt;
&lt;h2&gt;Publicando seu website no githubpages&lt;/h2&gt;
&lt;p&gt;Uma vez seu website pronto, execute o comando:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(env)$ make github&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Este comando ira preparar seu projeto para fazer push no github, insira suas credênciais e ao finalizar acesse sua página em https://username.github.io&lt;/p&gt;
&lt;p&gt;&lt;code&gt;
--~ Esta postagem será reatualizada algumas vezes até está concluída, esta é a sua primeira versão.
&lt;/code&gt;&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="blog"></category></entry></feed>